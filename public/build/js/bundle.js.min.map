{"version":3,"sources":["clientes.js","usuarios.js"],"names":["dataTable","dataTableInit","dataTableOption","destroy","language","url","dom","buttons","extend","text","titleAttr","className","columnDefs","orderable","targets","async","initDataTable","resultado","fetch","clientes","json","tableBody","document","getElementById","innerHTML","forEach","cliente","index","row","createElement","nombre","apellidos","correo","telefono","documento_identidad","fecha_nacimiento","id","appendChild","addEventListener","e","target","classList","contains","querySelector","value","trim","datos","FormData","Object","entries","key","append","respuesta","method","body","mostrarAlerta","titulo","mensaje","tipo","modal","$","error","console","log","subirActualizacionCliente","actualizarCliente","getAttribute","clienteId","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","listarClients","DataTable","querySelectorAll","hasClass","roles","1","2","3","estatus","0","usuarios","usuario","apellido","direccion","email","rol_id","fecha_creacion","listarUsers","window"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    let dataTable;\r\n    let dataTableInit = false;\r\n\r\n    // Opciones de DataTables\r\n    const dataTableOption = {\r\n        destroy: true,\r\n        language: {\r\n            url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-MX.json',\r\n        },\r\n        //dom: 'Bfrtip', // Agrega la sección para los botones\r\n        dom: '<\"row mb-2\"<\"d-flex justify-content-start col-sm-6\"f><\"d-flex justify-content-end col-sm-6\"B>>' +  // B-> botones, F -> búsqueda\r\n        '<\"row\"<\"col-sm-12\"tr>>' +             // T -> tabla\r\n         '<\"row d-flex justify-content-between\"<\"col d-flex justify-content-start\"l><\"col d-flex justify-content-center\"i><\"col d-flex justify-content-end\"p>>' ,  // L-> de entradas  - I -> número de resultados por página, P-> paginador\r\n        buttons: [\r\n            {\r\n                extend: 'excelHtml5',\r\n                text: '<i class=\"fa-solid fa-file-excel\"></i>',\r\n                titleAttr: 'Exportar a Excel',\r\n                className: 'btn btn-success'\r\n            },\r\n            {\r\n                extend: 'pdfHtml5',\r\n                text: '<i class=\"fa-solid fa-file-pdf\"></i>',\r\n                titleAttr: 'Exportar a PDF',\r\n                className: 'btn btn-danger'\r\n            },\r\n            {\r\n                extend: 'csvHtml5',\r\n                text: '<i class=\"fa-solid fa-file-csv\"></i>',\r\n                titleAttr: 'Exportar a CSV',\r\n                className: 'btn btn-primary'\r\n            },\r\n            {\r\n                extend: 'print',\r\n                text: '<i class=\"fa-solid fa-print\"></i>',\r\n                titleAttr: 'Imprimir',\r\n                className: 'btn btn-info'\r\n            }\r\n\r\n        ],\r\n        columnDefs: [\r\n            { orderable: false, targets: [3, 4, 7] }  // Desactiva la ordenación en la columna 8 (índice 7)\r\n        ]\r\n    };\r\n\r\n\r\n    //Ejecutar Funciones\r\n    initDataTable();\r\n\r\n    // Función para inicializar la DataTable\r\n    async function initDataTable() {\r\n        if (dataTableInit) {\r\n            dataTable.destroy();  // Destruye la DataTable si ya existe\r\n        }\r\n\r\n        await listarClients();  // Llama a la función para listar usuarios\r\n\r\n        // Inicializa la DataTable\r\n        dataTable = $(\"#datatable_clients\").DataTable(dataTableOption);\r\n\r\n        dataTableInit = true;  // Marca que la DataTable fue inicializada\r\n    }\r\n\r\n    // Función para listar los usuarios\r\n    async function listarClients() {\r\n        try {\r\n            const url = 'http://localhost:3000/api/clientes/listar';\r\n            const resultado = await fetch(url);\r\n            const clientes = await resultado.json();\r\n\r\n            // Selecciona el cuerpo de la tabla\r\n            const tableBody = document.getElementById('tableBody_clients');\r\n\r\n            // Limpia el contenido del tbody antes de agregar nuevas filas\r\n            tableBody.innerHTML = '';\r\n\r\n            // Recorre los clientes y genera las filas de la tabla\r\n            clientes.forEach((cliente, index) => {\r\n                // Crea una nueva fila\r\n                const row = document.createElement('tr');\r\n\r\n                // Agrega celdas (td) a la fila con la información que quieres mostrar\r\n                row.innerHTML = `\r\n                    <td>${index + 1}</td> \r\n                    <td>${cliente.nombre}</td>\r\n                    <td>${cliente.apellidos}</td>\r\n                    <td>${cliente.correo}</td>\r\n                    <td>${cliente.telefono}</td>\r\n                    <td>${cliente.documento_identidad}</td>\r\n                    <td>${cliente.fecha_nacimiento}</td>\r\n                    <td>\r\n                        <!-- Botón de editar que abre el modal -->\r\n                        <button class=\"btn btn-sm btn-primary\" data-toggle=\"modal\" data-target=\"#editarClienteModal${cliente.id}\">\r\n                            <i class=\"fa-solid fa-pen\"></i>\r\n                        </button>\r\n\r\n                        <!-- Modal Editar Cliente -->\r\n                        <div class=\"modal fade modal-editarCliente\" id=\"editarClienteModal${cliente.id}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"clientesModalLabel\" aria-hidden=\"true\">\r\n                            <div class=\"modal-dialog\" role=\"document\">\r\n                                <div class=\"modal-content\">\r\n                                    <div class=\"modal-header\">\r\n                                        <h5 class=\"modal-title\" id=\"clientesModalLabel\">Editar Cliente</h5>\r\n                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <form method=\"POST\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"nombre\">Nombre</label>\r\n                                                <input type=\"text\" class=\"form-control\" id=\"nombre${cliente.id}\" name=\"nombre\" value=\"${cliente.nombre}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"apellidos\">Apellidos</label>\r\n                                                <input type=\"text\" class=\"form-control\" id=\"apellidos${cliente.id}\" name=\"apellidos\" value=\"${cliente.apellidos}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"correo\">Correo</label>\r\n                                                <input type=\"email\" class=\"form-control\" id=\"correo${cliente.id}\" name=\"correo\" value=\"${cliente.correo}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"telefono\">Telefono</label>\r\n                                                <input type=\"text\" class=\"form-control\" id=\"telefono${cliente.id}\" name=\"telefono\" value=\"${cliente.telefono}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"documento_identidad\">DNI</label>\r\n                                                <input type=\"text\" class=\"form-control\" id=\"documento_identidad${cliente.id}\" name=\"documento_identidad\" value=\"${cliente.documento_identidad}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"fecha_nacimiento\">Fecha de Nacimiento</label>\r\n                                                <input type=\"date\" class=\"form-control\" id=\"fecha_nacimiento${cliente.id}\" name=\"fecha_nacimiento\" value=\"${cliente.fecha_nacimiento}\" />\r\n                                            </div>\r\n                                            <div class=\"modal-footer\">\r\n                                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                                <button type=\"button\" class=\"btn btn-primary btn-actualizarCliente\" data-id=\"${cliente.id}\">Guardar</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Botón de eliminar -->\r\n                        <button class=\"btn btn-sm btn-danger btn-eliminarCliente\" data-id=\"${cliente.id}\">\r\n                            <i class=\"fa-solid fa-trash\"></i>\r\n                        </button>\r\n                    </td>\r\n                `;\r\n                tableBody.appendChild(row); \r\n            });\r\n\r\n            // Delegación para actualizar cliente\r\n            tableBody.addEventListener('click', function(e) {\r\n                if (e.target.classList.contains('btn-actualizarCliente')) {\r\n                    const clienteId = e.target.getAttribute('data-id');\r\n                    actualizarCliente(clienteId);\r\n                }\r\n                if (e.target.classList.contains('btn-eliminarCliente')) {\r\n                    const clienteId = e.target.getAttribute('data-id');\r\n                    confirmarEliminacion(clienteId);\r\n                }\r\n            });\r\n\r\n            // Subir actualización del cliente\r\n            async function actualizarCliente(id) {\r\n                const cliente = {\r\n                    id,\r\n                    nombre: document.querySelector(`#nombre${id}`).value.trim(),\r\n                    apellidos: document.querySelector(`#apellidos${id}`).value.trim(),\r\n                    correo: document.querySelector(`#correo${id}`).value.trim(),\r\n                    telefono: document.querySelector(`#telefono${id}`).value.trim(),\r\n                    documento_identidad: document.querySelector(`#documento_identidad${id}`).value.trim(),\r\n                    fecha_nacimiento: document.querySelector(`#fecha_nacimiento${id}`).value\r\n                };\r\n                await subirActualizacionCliente(cliente);  // Envía los datos para actualización\r\n            }\r\n\r\n            async function subirActualizacionCliente(cliente) {\r\n                const datos = new FormData();\r\n                Object.entries(cliente).forEach(([key, value]) => datos.append(key, value));\r\n            \r\n                try {\r\n                    const url = 'http://localhost:3000/api/clientes/actualizar';\r\n                    const respuesta = await fetch(url, {\r\n                        method: 'POST',\r\n                        body: datos\r\n                    });\r\n            \r\n                    const resultado = await respuesta.json();\r\n                    mostrarAlerta(resultado.titulo, resultado.mensaje, resultado.tipo);\r\n            \r\n                    // Cerrar el modal inmediatamente\r\n                    const modal = document.querySelector(`#editarClienteModal${cliente.id}`);\r\n                    if (modal) {\r\n                        $(modal).modal('hide');\r\n                    }\r\n            \r\n                    // Llama a listarClients para actualizar los datos sin destruir DataTable\r\n                    await initDataTable();\r\n            \r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        function confirmarEliminacion(id){\r\n            Swal.fire({\r\n                title: '¿Estás seguro?',\r\n                text: \"Esta acción no se puede deshacer.\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#d33',\r\n                cancelButtonColor: '#3085d6',\r\n                confirmButtonText: 'Sí, eliminar',\r\n                cancelButtonText: 'Cancelar'\r\n            }).then(async (result) => {\r\n                if (result.isConfirmed) {//result.isConfirmed verifica si el usuario ha hecho clic en \"Sí, eliminar\".\r\n                    try {\r\n                        const datos = new FormData();\r\n                        datos.append('id', id);\r\n\r\n                        const url = `http://localhost:3000/api/clientes/eliminar`;\r\n                        const respuesta = await fetch(url, {\r\n                            method: 'POST',\r\n                            body: datos\r\n                        });\r\n                        \r\n                        const resultado = await respuesta.json();\r\n                        mostrarAlerta(resultado.titulo, resultado.mensaje, resultado.tipo);\r\n                        \r\n                        if (resultado.tipo === 'success') { //l servidor indica que la eliminación fue exitosa\r\n                            await initDataTable();\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(error);\r\n                    }\r\n                }\r\n            });   \r\n        }\r\n    }\r\n\r\n    function mostrarAlerta(titulo, mensaje, tipo) {\r\n        // Mostrar la alerta con SweetAlert2\r\n        Swal.fire({\r\n            icon: tipo,  // Tipo de alerta (success, error, warning, info, etc.)\r\n            title: titulo,\r\n            text: mensaje,  // Mensaje de la alerta\r\n        }).then(() => {\r\n            // Cerrar el modal de edición del cliente al cerrar la alerta\r\n            const modales = document.querySelectorAll('.modal-editarCliente');\r\n            modales.forEach(modal => {\r\n                if ($(modal).hasClass('show')) {\r\n                    $(modal).modal('hide');\r\n                }\r\n            });\r\n        });\r\n    }\r\n    \r\n})();\r\n","(function () {\r\n    let dataTable;\r\n    let dataTableInit = false;\r\n\r\n    // Opciones de DataTables\r\n    const dataTableOption = {\r\n        destroy: true,\r\n        language: {\r\n            url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-MX.json',\r\n        },\r\n        columnDefs: [\r\n            { orderable: false, targets: [3, 4, 8] }  // Desactiva la ordenación en la columna 8 (índice 7)\r\n        ]\r\n    };\r\n\r\n\r\n    // Diccionarios para roles y estatus\r\n    const roles = {\r\n        1: 'Administrador',\r\n        2: 'Empleado General',\r\n        3: 'Limpieza'\r\n    };\r\n\r\n    const estatus = {\r\n        1: 'Activo',\r\n        0: 'Inactivo'\r\n    };\r\n\r\n    // Función para inicializar la DataTable\r\n    async function initDataTable() {\r\n        if (dataTableInit) {\r\n            dataTable.destroy();  // Destruye la DataTable si ya existe\r\n        }\r\n\r\n        await listarUsers();  // Llama a la función para listar usuarios\r\n\r\n        // Inicializa la DataTable\r\n        dataTable = $(\"#datatable_users\").DataTable(dataTableOption);\r\n\r\n        dataTableInit = true;  // Marca que la DataTable fue inicializada\r\n    }\r\n\r\n    // Función para listar los usuarios\r\n    async function listarUsers() {\r\n        try {\r\n            const url = 'http://localhost:3000/api/usuarios/listar';\r\n            const resultado = await fetch(url);\r\n            const usuarios = await resultado.json();\r\n\r\n            // Selecciona el cuerpo de la tabla\r\n            const tableBody = document.getElementById('tableBody_users');\r\n\r\n            // Limpia el contenido del tbody antes de agregar nuevas filas\r\n            tableBody.innerHTML = '';\r\n\r\n            // Recorre los usuarios y genera las filas de la tabla\r\n            usuarios.forEach((usuario, index) => {\r\n                // Crea una nueva fila\r\n                const row = document.createElement('tr');\r\n\r\n                // Agrega celdas (td) a la fila con la información que quieres mostrar\r\n                row.innerHTML = `\r\n                    <td>${index + 1}</td> \r\n                    <td>${usuario.nombre}</td>\r\n                    <td>${usuario.apellido}</td>\r\n                    <td>${usuario.direccion}</td>\r\n                    <td>${usuario.email}</td>\r\n                    <td>${roles[usuario.rol_id]}</td> <!-- Muestra el rol legible -->\r\n                    <td>${estatus[usuario.estatus]}</td> <!-- Muestra el estatus legible -->\r\n                    <td>${usuario.fecha_creacion}</td>\r\n                    <td>\r\n                        <!-- Botón de editar -->\r\n                        <button class=\"btn btn-sm btn-primary\">\r\n                            <i class=\"fa-solid fa-pen\"></i>\r\n                        </button>\r\n\r\n                        <!-- Formulario para eliminar -->\r\n                        <form method=\"POST\" action=\"/admin/usuarios/eliminar\" class=\"d-inline\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"${usuario.id}\">\r\n                            <button class=\"btn btn-sm btn-danger\" type=\"submit\">\r\n                                <i class=\"fa-solid fa-trash\"></i>\r\n                            </button>\r\n                        </form>\r\n                    </td>\r\n                `;\r\n\r\n                // Agrega la fila a la tabla\r\n                tableBody.appendChild(row);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Ejecuta la función cuando la ventana cargue\r\n    window.addEventListener('load', async () => {\r\n        await initDataTable();\r\n    });\r\n})();\r\n"]}