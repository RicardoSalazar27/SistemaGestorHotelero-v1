{"version":3,"sources":["usuarios.js"],"names":["dataTable","dataTableInit","dataTableOption","destroy","language","url","async","initDataTable","resultado","fetch","usuarios","json","tableBody","document","getElementById","innerHTML","forEach","usuario","index","row","createElement","nombre","apellido","direccion","email","rol_id","estatus","fecha_creacion","id","appendChild","error","console","log","listarUsers","$","DataTable","window","addEventListener"],"mappings":"CAAA,WACA,IAAAA,EACAC,GAAA,EAGA,MAAAC,EAAA,CACAC,SAAA,EACAC,SAAA,CACAC,IAAA,8DAKAC,eAAAC,IACAN,GACAD,EAAAG,gBAYAG,iBACA,IACA,MAAAD,EAAA,4CACAG,QAAAC,MAAAJ,GACAK,QAAAF,EAAAG,OAGAC,EAAAC,SAAAC,eAAA,mBAGAF,EAAAG,UAAA,GAGAL,EAAAM,QAAA,CAAAC,EAAAC,KAEA,MAAAC,EAAAN,SAAAO,cAAA,MAGAD,EAAAJ,UAAA,6BACAG,EAAA,oCACAD,EAAAI,wCACAJ,EAAAK,0CACAL,EAAAM,2CACAN,EAAAO,uCACAP,EAAAQ,wCACAR,EAAAS,yCACAT,EAAAU,ifASAV,EAAAW,iRAUAhB,EAAAiB,YAAAV,KAGA,MAAAW,GACAC,QAAAC,IAAAF,IA1DAG,GAGAjC,EAAAkC,EAAA,oBAAAC,UAAAjC,GAEAD,GAAA,EA0DAmC,OAAAC,iBAAA,OAAA/B,gBACAC,MAlFA","file":"bundle.js","sourcesContent":["(function () {\r\n    let dataTable;   // Variable para DataTable\r\n    let dataTableInit = false;  // Controla si la DataTable ya fue inicializada\r\n\r\n    // Aquí puedes agregar más opciones de DataTables si es necesario\r\n    const dataTableOption = {\r\n        destroy: true,\r\n        language: {\r\n            url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-MX.json',\r\n        }\r\n    }\r\n\r\n    // Función para inicializar la DataTable\r\n    async function initDataTable() {\r\n        if (dataTableInit) {\r\n            dataTable.destroy();  // Destruye la DataTable si ya existe\r\n        }\r\n\r\n        await listarUsers();  // Llama a la función para listar usuarios\r\n\r\n        // Inicializa la DataTable\r\n        dataTable = $(\"#datatable_users\").DataTable(dataTableOption);\r\n\r\n        dataTableInit = true;  // Marca que la DataTable fue inicializada\r\n    }\r\n\r\n    // Función para listar los usuarios\r\n    async function listarUsers() {\r\n        try {\r\n            const url = 'http://localhost:3000/api/usuarios/listar';\r\n            const resultado = await fetch(url);\r\n            const usuarios = await resultado.json();\r\n\r\n            // Selecciona el cuerpo de la tabla\r\n            const tableBody = document.getElementById('tableBody_users');\r\n\r\n            // Limpia el contenido del tbody antes de agregar nuevas filas\r\n            tableBody.innerHTML = '';\r\n\r\n            // Recorre los usuarios y genera las filas de la tabla\r\n            usuarios.forEach((usuario, index) => {\r\n                // Crea una nueva fila\r\n                const row = document.createElement('tr');\r\n\r\n                // Agrega celdas (td) a la fila con la información que quieres mostrar\r\n                row.innerHTML = `\r\n                    <td>${index + 1}</td> \r\n                    <td>${usuario.nombre}</td>\r\n                    <td>${usuario.apellido}</td>\r\n                    <td>${usuario.direccion}</td>\r\n                    <td>${usuario.email}</td>\r\n                    <td>${usuario.rol_id}</td>\r\n                    <td>${usuario.estatus}</td>\r\n                    <td>${usuario.fecha_creacion}</td>\r\n                    <td>\r\n                        <!-- Botón de editar -->\r\n                        <button class=\"btn btn-sm btn-primary\">\r\n                            <i class=\"fa-solid fa-pen\"></i>\r\n                        </button>\r\n\r\n                        <!-- Formulario para eliminar -->\r\n                        <form method=\"POST\" action=\"/admin/usuarios/eliminar\" class=\"d-inline\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"${usuario.id}\">\r\n                            <button class=\"btn btn-sm btn-danger\" type=\"submit\">\r\n                                <i class=\"fa-solid fa-trash\"></i>\r\n                            </button>\r\n                        </form>\r\n                    </td>\r\n                `;\r\n\r\n\r\n                // Agrega la fila a la tabla\r\n                tableBody.appendChild(row);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Ejecuta la función cuando la ventana cargue\r\n    window.addEventListener('load', async () => {\r\n        await initDataTable();  // Llama a la función para inicializar la tabla cuando todo esté listo\r\n    });\r\n})();\r\n"]}