{"version":3,"sources":["clientes.js","usuarios.js"],"names":["dataTable","dataTableInit","dataTableOption","destroy","language","url","dom","buttons","extend","text","titleAttr","className","columnDefs","orderable","targets","async","initDataTable","resultado","fetch","clientes","json","tableBody","document","getElementById","innerHTML","forEach","cliente","index","row","createElement","nombre","apellidos","correo","telefono","documento_identidad","fecha_nacimiento","id","appendChild","error","console","log","listarClients","$","DataTable","window","addEventListener","roles","1","2","3","estatus","0","usuarios","usuario","apellido","direccion","email","rol_id","fecha_creacion","listarUsers"],"mappings":"CAAA,WACA,IAAAA,EACAC,GAAA,EAGA,MAAAC,EAAA,CACAC,SAAA,EACAC,SAAA,CACAC,IAAA,6DAGAC,IAAA,2QAGAC,QAAA,CACA,CACAC,OAAA,aACAC,KAAA,yCACAC,UAAA,mBACAC,UAAA,mBAEA,CACAH,OAAA,WACAC,KAAA,uCACAC,UAAA,iBACAC,UAAA,kBAEA,CACAH,OAAA,WACAC,KAAA,uCACAC,UAAA,iBACAC,UAAA,mBAEA,CACAH,OAAA,QACAC,KAAA,oCACAC,UAAA,WACAC,UAAA,iBAIAC,WAAA,CACA,CAAAC,WAAA,EAAAC,QAAA,CAAA,EAAA,EAAA,MAKAC,eAAAC,IACAf,GACAD,EAAAG,gBAYAY,iBACA,IACA,MAAAV,EAAA,4CACAY,QAAAC,MAAAb,GACAc,QAAAF,EAAAG,OAGAC,EAAAC,SAAAC,eAAA,qBAGAF,EAAAG,UAAA,GAGAL,EAAAM,QAAA,CAAAC,EAAAC,KAEA,MAAAC,EAAAN,SAAAO,cAAA,MAGAD,EAAAJ,UAAA,6BACAG,EAAA,oCACAD,EAAAI,wCACAJ,EAAAK,2CACAL,EAAAM,wCACAN,EAAAO,0CACAP,EAAAQ,qDACAR,EAAAS,mfASAT,EAAAU,iRASAf,EAAAgB,YAAAT,KAGA,MAAAU,GACAC,QAAAC,IAAAF,IAxDAG,GAGAzC,EAAA0C,EAAA,sBAAAC,UAAAzC,GAEAD,GAAA,EAwDA2C,OAAAC,iBAAA,OAAA9B,gBACAC,MAlHA,GCAA,WACA,IAAAhB,EACAC,GAAA,EAGA,MAAAC,EAAA,CACAC,SAAA,EACAC,SAAA,CACAC,IAAA,6DAEAO,WAAA,CACA,CAAAC,WAAA,EAAAC,QAAA,CAAA,EAAA,EAAA,MAMAgC,EAAA,CACAC,EAAA,gBACAC,EAAA,mBACAC,EAAA,YAGAC,EAAA,CACAH,EAAA,SACAI,EAAA,YAIApC,eAAAC,IACAf,GACAD,EAAAG,gBAYAY,iBACA,IACA,MAAAV,EAAA,4CACAY,QAAAC,MAAAb,GACA+C,QAAAnC,EAAAG,OAGAC,EAAAC,SAAAC,eAAA,mBAGAF,EAAAG,UAAA,GAGA4B,EAAA3B,QAAA,CAAA4B,EAAA1B,KAEA,MAAAC,EAAAN,SAAAO,cAAA,MAGAD,EAAAJ,UAAA,6BACAG,EAAA,oCACA0B,EAAAvB,wCACAuB,EAAAC,0CACAD,EAAAE,2CACAF,EAAAG,uCACAV,EAAAO,EAAAI,+EACAP,EAAAG,EAAAH,oFACAG,EAAAK,ifASAL,EAAAjB,iRASAf,EAAAgB,YAAAT,KAGA,MAAAU,GACAC,QAAAC,IAAAF,IAzDAqB,GAGA3D,EAAA0C,EAAA,oBAAAC,UAAAzC,GAEAD,GAAA,EAyDA2C,OAAAC,iBAAA,OAAA9B,gBACAC,MAjGA","file":"bundle.js","sourcesContent":["(function () {\r\n    let dataTable;\r\n    let dataTableInit = false;\r\n\r\n    // Opciones de DataTables\r\n    const dataTableOption = {\r\n        destroy: true,\r\n        language: {\r\n            url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-MX.json',\r\n        },\r\n        //dom: 'Bfrtip', // Agrega la sección para los botones\r\n        dom: '<\"row mb-2\"<\"d-flex justify-content-start col-sm-6\"f><\"d-flex justify-content-end col-sm-6\"B>>' +  // B-> botones, F -> búsqueda\r\n        '<\"row\"<\"col-sm-12\"tr>>' +             // T -> tabla\r\n         '<\"row d-flex justify-content-between\"<\"col d-flex justify-content-start\"l><\"col d-flex justify-content-center\"i><\"col d-flex justify-content-end\"p>>' ,  // L-> de entradas  - I -> número de resultados por página, P-> paginador\r\n        buttons: [\r\n            {\r\n                extend: 'excelHtml5',\r\n                text: '<i class=\"fa-solid fa-file-excel\"></i>',\r\n                titleAttr: 'Exportar a Excel',\r\n                className: 'btn btn-success'\r\n            },\r\n            {\r\n                extend: 'pdfHtml5',\r\n                text: '<i class=\"fa-solid fa-file-pdf\"></i>',\r\n                titleAttr: 'Exportar a PDF',\r\n                className: 'btn btn-danger'\r\n            },\r\n            {\r\n                extend: 'csvHtml5',\r\n                text: '<i class=\"fa-solid fa-file-csv\"></i>',\r\n                titleAttr: 'Exportar a CSV',\r\n                className: 'btn btn-primary'\r\n            },\r\n            {\r\n                extend: 'print',\r\n                text: '<i class=\"fa-solid fa-print\"></i>',\r\n                titleAttr: 'Imprimir',\r\n                className: 'btn btn-info'\r\n            }\r\n\r\n        ],\r\n        columnDefs: [\r\n            { orderable: false, targets: [3, 4, 7] }  // Desactiva la ordenación en la columna 8 (índice 7)\r\n        ]\r\n    };\r\n\r\n    // Función para inicializar la DataTable\r\n    async function initDataTable() {\r\n        if (dataTableInit) {\r\n            dataTable.destroy();  // Destruye la DataTable si ya existe\r\n        }\r\n\r\n        await listarClients();  // Llama a la función para listar usuarios\r\n\r\n        // Inicializa la DataTable\r\n        dataTable = $(\"#datatable_clients\").DataTable(dataTableOption);\r\n\r\n        dataTableInit = true;  // Marca que la DataTable fue inicializada\r\n    }\r\n\r\n    // Función para listar los usuarios\r\n    async function listarClients() {\r\n        try {\r\n            const url = 'http://localhost:3000/api/clientes/listar';\r\n            const resultado = await fetch(url);\r\n            const clientes = await resultado.json();\r\n\r\n            // Selecciona el cuerpo de la tabla\r\n            const tableBody = document.getElementById('tableBody_clients');\r\n\r\n            // Limpia el contenido del tbody antes de agregar nuevas filas\r\n            tableBody.innerHTML = '';\r\n\r\n            // Recorre los clientes y genera las filas de la tabla\r\n            clientes.forEach((cliente, index) => {\r\n                // Crea una nueva fila\r\n                const row = document.createElement('tr');\r\n\r\n                // Agrega celdas (td) a la fila con la información que quieres mostrar\r\n                row.innerHTML = `\r\n                    <td>${index + 1}</td> \r\n                    <td>${cliente.nombre}</td>\r\n                    <td>${cliente.apellidos}</td>\r\n                    <td>${cliente.correo}</td>\r\n                    <td>${cliente.telefono}</td>\r\n                    <td>${cliente.documento_identidad}</td>\r\n                    <td>${cliente.fecha_nacimiento}</td>\r\n                    <td>\r\n                        <!-- Botón de editar -->\r\n                        <button class=\"btn btn-sm btn-primary\">\r\n                            <i class=\"fa-solid fa-pen\"></i>\r\n                        </button>\r\n\r\n                        <!-- Formulario para eliminar -->\r\n                        <form method=\"POST\" action=\"/admin/clientes/eliminar\" class=\"d-inline\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"${cliente.id}\">\r\n                            <button class=\"btn btn-sm btn-danger\" type=\"submit\">\r\n                                <i class=\"fa-solid fa-trash\"></i>\r\n                            </button>\r\n                        </form>\r\n                    </td>\r\n                `;\r\n\r\n                // Agrega la fila a la tabla\r\n                tableBody.appendChild(row);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Ejecuta la función cuando la ventana cargue\r\n    window.addEventListener('load', async () => {\r\n        await initDataTable();\r\n    });\r\n})();\r\n","(function () {\r\n    let dataTable;\r\n    let dataTableInit = false;\r\n\r\n    // Opciones de DataTables\r\nconst dataTableOption = {\r\n    destroy: true,\r\n    language: {\r\n        url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-MX.json',\r\n    },\r\n    columnDefs: [\r\n        { orderable: false, targets: [3, 4, 8] }  // Desactiva la ordenación en la columna 8 (índice 7)\r\n    ]\r\n};\r\n\r\n\r\n    // Diccionarios para roles y estatus\r\n    const roles = {\r\n        1: 'Administrador',\r\n        2: 'Empleado General',\r\n        3: 'Limpieza'\r\n    };\r\n\r\n    const estatus = {\r\n        1: 'Activo',\r\n        0: 'Inactivo'\r\n    };\r\n\r\n    // Función para inicializar la DataTable\r\n    async function initDataTable() {\r\n        if (dataTableInit) {\r\n            dataTable.destroy();  // Destruye la DataTable si ya existe\r\n        }\r\n\r\n        await listarUsers();  // Llama a la función para listar usuarios\r\n\r\n        // Inicializa la DataTable\r\n        dataTable = $(\"#datatable_users\").DataTable(dataTableOption);\r\n\r\n        dataTableInit = true;  // Marca que la DataTable fue inicializada\r\n    }\r\n\r\n    // Función para listar los usuarios\r\n    async function listarUsers() {\r\n        try {\r\n            const url = 'http://localhost:3000/api/usuarios/listar';\r\n            const resultado = await fetch(url);\r\n            const usuarios = await resultado.json();\r\n\r\n            // Selecciona el cuerpo de la tabla\r\n            const tableBody = document.getElementById('tableBody_users');\r\n\r\n            // Limpia el contenido del tbody antes de agregar nuevas filas\r\n            tableBody.innerHTML = '';\r\n\r\n            // Recorre los usuarios y genera las filas de la tabla\r\n            usuarios.forEach((usuario, index) => {\r\n                // Crea una nueva fila\r\n                const row = document.createElement('tr');\r\n\r\n                // Agrega celdas (td) a la fila con la información que quieres mostrar\r\n                row.innerHTML = `\r\n                    <td>${index + 1}</td> \r\n                    <td>${usuario.nombre}</td>\r\n                    <td>${usuario.apellido}</td>\r\n                    <td>${usuario.direccion}</td>\r\n                    <td>${usuario.email}</td>\r\n                    <td>${roles[usuario.rol_id]}</td> <!-- Muestra el rol legible -->\r\n                    <td>${estatus[usuario.estatus]}</td> <!-- Muestra el estatus legible -->\r\n                    <td>${usuario.fecha_creacion}</td>\r\n                    <td>\r\n                        <!-- Botón de editar -->\r\n                        <button class=\"btn btn-sm btn-primary\">\r\n                            <i class=\"fa-solid fa-pen\"></i>\r\n                        </button>\r\n\r\n                        <!-- Formulario para eliminar -->\r\n                        <form method=\"POST\" action=\"/admin/usuarios/eliminar\" class=\"d-inline\">\r\n                            <input type=\"hidden\" name=\"id\" value=\"${usuario.id}\">\r\n                            <button class=\"btn btn-sm btn-danger\" type=\"submit\">\r\n                                <i class=\"fa-solid fa-trash\"></i>\r\n                            </button>\r\n                        </form>\r\n                    </td>\r\n                `;\r\n\r\n                // Agrega la fila a la tabla\r\n                tableBody.appendChild(row);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Ejecuta la función cuando la ventana cargue\r\n    window.addEventListener('load', async () => {\r\n        await initDataTable();\r\n    });\r\n})();\r\n"]}