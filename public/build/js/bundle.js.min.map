{"version":3,"sources":["clientes.js","usuarios.js"],"names":["dataTable","dataTableInit","dataTableOption","destroy","language","url","dom","buttons","extend","text","titleAttr","exportOptions","columns","className","columnDefs","orderable","targets","async","initDataTable","resultado","fetch","clientes","json","tableBody","document","getElementById","innerHTML","forEach","cliente","index","row","createElement","nombre","apellidos","correo","telefono","documento_identidad","fecha_nacimiento","id","appendChild","addEventListener","e","target","classList","contains","querySelector","value","trim","datos","FormData","Object","entries","key","append","respuesta","method","body","mostrarAlerta","titulo","mensaje","tipo","modal","$","error","console","log","subirActualizacionCliente","actualizarCliente","getAttribute","clienteId","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","listarClients","DataTable","querySelectorAll","hasClass","nuevoCliente","visible","rolesDictionary","1","2","3","estatusDictionary","0","usuarios","usuario","apellido","direccion","email","password","password2","rol_id","estatus","fecha_creacion","ultimo_acceso","confirmado","password_actual","password_nuevo","actualizarUsuario","UsuarioId","confirmarEliminacionUsuario","listarUsers","initDatable"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    let dataTable;\r\n    let dataTableInit = false;\r\n\r\n    // Opciones de DataTables\r\n    const dataTableOption = {\r\n        destroy: true,\r\n        language: {\r\n            url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-MX.json',\r\n        },\r\n        //dom: 'Bfrtip', // Agrega la sección para los botones\r\n        dom: '<\"row mb-2\"<\"d-flex justify-content-start col-sm-6\"f><\"d-flex justify-content-end col-sm-6\"B>>' +  // B-> botones, F -> búsqueda\r\n        '<\"row\"<\"col-sm-12\"tr>>' +             // T -> tabla\r\n         '<\"row d-flex justify-content-between\"<\"col d-flex justify-content-start\"l><\"col d-flex justify-content-center\"i><\"col d-flex justify-content-end\"p>>' ,  // L-> de entradas  - I -> número de resultados por página, P-> paginador\r\n        buttons: [\r\n            {\r\n                extend: 'excelHtml5',\r\n                text: '<i class=\"fa-solid fa-file-excel\"></i>',\r\n                titleAttr: 'Exportar a Excel',\r\n                exportOptions: {\r\n                    columns: ':not(.no-export)' // Asegúrate de que la clase 'no-export' esté en la columna que quieres ocultar\r\n                },\r\n                className: 'btn btn-success'\r\n            },\r\n            {\r\n                extend: 'pdfHtml5',\r\n                text: '<i class=\"fa-solid fa-file-pdf\"></i>',\r\n                titleAttr: 'Exportar a PDF',\r\n                exportOptions: {\r\n                    columns: ':not(.no-export)' // Asegúrate de que la clase 'no-export' esté en la columna que quieres ocultar\r\n                },\r\n                className: 'btn btn-danger'\r\n            },\r\n            {\r\n                extend: 'csvHtml5',\r\n                text: '<i class=\"fa-solid fa-file-csv\"></i>',\r\n                titleAttr: 'Exportar a CSV',\r\n                exportOptions: {\r\n                    columns: ':not(.no-export)' // Asegúrate de que la clase 'no-export' esté en la columna que quieres ocultar\r\n                },\r\n                className: 'btn btn-primary'\r\n            },\r\n            {\r\n                extend: 'print',\r\n                text: '<i class=\"fa-solid fa-print\"></i>',\r\n                titleAttr: 'Imprimir',\r\n                exportOptions: {\r\n                    columns: ':not(.no-export)' // Asegúrate de que la clase 'no-export' esté en la columna que quieres ocultar\r\n                },\r\n                className: 'btn btn-info'\r\n            }\r\n\r\n        ],\r\n        columnDefs: [\r\n            { orderable: false, targets: [3, 4, 7] }  // Desactiva la ordenación en la columna 8 (índice 7)\r\n        ]\r\n    };\r\n\r\n\r\n    //Ejecutar Funciones\r\n    initDataTable();\r\n\r\n    // Función para inicializar la DataTable\r\n    async function initDataTable() {\r\n        if (dataTableInit) {\r\n            dataTable.destroy();  // Destruye la DataTable si ya existe\r\n        }\r\n\r\n        await listarClients();  // Llama a la función para listar usuarios\r\n\r\n        // Inicializa la DataTable\r\n        dataTable = $(\"#datatable_clients\").DataTable(dataTableOption);\r\n\r\n        dataTableInit = true;  // Marca que la DataTable fue inicializada\r\n    }\r\n\r\n    // Función para listar los usuarios\r\n    async function listarClients() {\r\n        try {\r\n            const url = 'http://localhost:3000/api/clientes/listar';\r\n            const resultado = await fetch(url);\r\n            const clientes = await resultado.json();\r\n\r\n            // Selecciona el cuerpo de la tabla\r\n            const tableBody = document.getElementById('tableBody_clients');\r\n\r\n            // Limpia el contenido del tbody antes de agregar nuevas filas\r\n            tableBody.innerHTML = '';\r\n\r\n            // Recorre los clientes y genera las filas de la tabla\r\n            clientes.forEach((cliente, index) => {\r\n                // Crea una nueva fila\r\n                const row = document.createElement('tr');\r\n\r\n                // Agrega celdas (td) a la fila con la información que quieres mostrar\r\n                row.innerHTML = `\r\n                    <td>${index + 1}</td> \r\n                    <td>${cliente.nombre}</td>\r\n                    <td>${cliente.apellidos}</td>\r\n                    <td>${cliente.correo}</td>\r\n                    <td>${cliente.telefono}</td>\r\n                    <td>${cliente.documento_identidad}</td>\r\n                    <td>${cliente.fecha_nacimiento}</td>\r\n                    <td>\r\n                        <!-- Botón de editar que abre el modal -->\r\n                        <button class=\"btn btn-sm btn-primary\" data-toggle=\"modal\" data-target=\"#editarClienteModal${cliente.id}\">\r\n                            <i class=\"fa-solid fa-pen\"></i>\r\n                        </button>\r\n\r\n                        <!-- Modal Editar Cliente -->\r\n                        <div class=\"modal fade modal-editarCliente\" id=\"editarClienteModal${cliente.id}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"clientesModalLabel\" aria-hidden=\"true\">\r\n                            <div class=\"modal-dialog\" role=\"document\">\r\n                                <div class=\"modal-content\">\r\n                                    <div class=\"modal-header\">\r\n                                        <h5 class=\"modal-title\" id=\"clientesModalLabel\">Editar Cliente</h5>\r\n                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <form method=\"POST\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"nombre\">Nombre</label>\r\n                                                <input type=\"text\" class=\"form-control\" id=\"nombre${cliente.id}\" name=\"nombre\" value=\"${cliente.nombre}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"apellidos\">Apellidos</label>\r\n                                                <input type=\"text\" class=\"form-control\" id=\"apellidos${cliente.id}\" name=\"apellidos\" value=\"${cliente.apellidos}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"correo\">Correo</label>\r\n                                                <input type=\"email\" class=\"form-control\" id=\"correo${cliente.id}\" name=\"correo\" value=\"${cliente.correo}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"telefono\">Telefono</label>\r\n                                                <input type=\"text\" class=\"form-control\" id=\"telefono${cliente.id}\" name=\"telefono\" value=\"${cliente.telefono}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"documento_identidad\">DNI</label>\r\n                                                <input type=\"text\" class=\"form-control\" id=\"documento_identidad${cliente.id}\" name=\"documento_identidad\" value=\"${cliente.documento_identidad}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"fecha_nacimiento\">Fecha de Nacimiento</label>\r\n                                                <input type=\"date\" class=\"form-control\" id=\"fecha_nacimiento${cliente.id}\" name=\"fecha_nacimiento\" value=\"${cliente.fecha_nacimiento}\" />\r\n                                            </div>\r\n                                            <div class=\"modal-footer\">\r\n                                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                                <button type=\"button\" class=\"btn btn-primary btn-actualizarCliente\" data-id=\"${cliente.id}\">Guardar</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Botón de eliminar -->\r\n                        <button class=\"btn btn-sm btn-danger btn-eliminarCliente\" data-id=\"${cliente.id}\">\r\n                            <i class=\"fa-solid fa-trash\"></i>\r\n                        </button>\r\n                    </td>\r\n                `;\r\n                tableBody.appendChild(row); \r\n            });\r\n\r\n            // Delegación para actualizar cliente\r\n            tableBody.addEventListener('click', function(e) {\r\n                if (e.target.classList.contains('btn-actualizarCliente')) {\r\n                    const clienteId = e.target.getAttribute('data-id');\r\n                    actualizarCliente(clienteId);\r\n                }\r\n            // Delegación para eliminar cliente\r\n                if (e.target.classList.contains('btn-eliminarCliente')) {\r\n                    const clienteId = e.target.getAttribute('data-id');\r\n                    confirmarEliminacion(clienteId);\r\n                }\r\n            });\r\n\r\n            // Subir actualización del cliente\r\n            async function actualizarCliente(id) {\r\n                const cliente = {\r\n                    id,\r\n                    nombre: document.querySelector(`#nombre${id}`).value.trim(),\r\n                    apellidos: document.querySelector(`#apellidos${id}`).value.trim(),\r\n                    correo: document.querySelector(`#correo${id}`).value.trim(),\r\n                    telefono: document.querySelector(`#telefono${id}`).value.trim(),\r\n                    documento_identidad: document.querySelector(`#documento_identidad${id}`).value.trim(),\r\n                    fecha_nacimiento: document.querySelector(`#fecha_nacimiento${id}`).value\r\n                };\r\n                await subirActualizacionCliente(cliente);  // Envía los datos para actualización\r\n            }\r\n\r\n            async function subirActualizacionCliente(cliente) {\r\n                const datos = new FormData();\r\n                Object.entries(cliente).forEach(([key, value]) => datos.append(key, value));\r\n            \r\n                try {\r\n                    const url = 'http://localhost:3000/api/clientes/actualizar';\r\n                    const respuesta = await fetch(url, {\r\n                        method: 'POST',\r\n                        body: datos\r\n                    });\r\n            \r\n                    const resultado = await respuesta.json();\r\n                    mostrarAlerta(resultado.titulo, resultado.mensaje, resultado.tipo);\r\n            \r\n                    // Cerrar el modal inmediatamente\r\n                    const modal = document.querySelector(`#editarClienteModal${cliente.id}`);\r\n                    if (modal) {\r\n                        $(modal).modal('hide');\r\n                    }\r\n            \r\n                    // Llama a listarClients para actualizar los datos sin destruir DataTable\r\n                    await initDataTable();\r\n            \r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        function confirmarEliminacion(id){\r\n            Swal.fire({\r\n                title: '¿Estás seguro?',\r\n                text: \"Esta acción no se puede deshacer.\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#d33',\r\n                cancelButtonColor: '#3085d6',\r\n                confirmButtonText: 'Sí, eliminar',\r\n                cancelButtonText: 'Cancelar'\r\n            }).then(async (result) => {\r\n                if (result.isConfirmed) {//result.isConfirmed verifica si el usuario ha hecho clic en \"Sí, eliminar\".\r\n                    try {\r\n                        const datos = new FormData();\r\n                        datos.append('id', id);\r\n\r\n                        const url = `http://localhost:3000/api/clientes/eliminar`;\r\n                        const respuesta = await fetch(url, {\r\n                            method: 'POST',\r\n                            body: datos\r\n                        });\r\n                        \r\n                        const resultado = await respuesta.json();\r\n                        mostrarAlerta(resultado.titulo, resultado.mensaje, resultado.tipo);\r\n                        \r\n                        if (resultado.tipo === 'success') { //l servidor indica que la eliminación fue exitosa\r\n                            await initDataTable();\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(error);\r\n                    }\r\n                }\r\n            });   \r\n        }\r\n    }\r\n\r\n    document.querySelector('.btnAgregarCliente').addEventListener('click', async function () {\r\n        // Crear objeto cliente con los valores de los campos\r\n        const nuevoCliente = {\r\n            nombre: document.getElementById('nombre').value.trim(),\r\n            apellidos: document.getElementById('apellidos').value.trim(),\r\n            correo: document.getElementById('correo').value.trim(),\r\n            telefono: document.getElementById('telefono').value.trim(),\r\n            documento_identidad: document.getElementById('documento_identidad').value.trim(),\r\n            fecha_nacimiento: document.getElementById('fecha_nacimiento').value\r\n        };\r\n    \r\n        // Validar que no estén vacíos los campos obligatorios\r\n        if (!nuevoCliente.nombre || !nuevoCliente.apellidos || !nuevoCliente.correo) {\r\n            mostrarAlerta('Error', 'Todos los campos son obligatorios', 'error');\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            // Crear un FormData para enviar los datos\r\n            const datos = new FormData();\r\n            Object.entries(nuevoCliente).forEach(([key, value]) => datos.append(key, value));\r\n    \r\n            // Enviar petición para agregar cliente\r\n            const url = 'http://localhost:3000/api/clientes/crear';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n    \r\n            const resultado = await respuesta.json();\r\n            mostrarAlerta(resultado.titulo, resultado.mensaje, resultado.tipo);\r\n    \r\n            // Cierra el modal al guardar\r\n            $('#clientesModal').modal('hide');\r\n    \r\n            // Vuelve a cargar los datos para reflejar el nuevo cliente en la tabla\r\n            await initDataTable();\r\n    \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    });\r\n    \r\n\r\n    function mostrarAlerta(titulo, mensaje, tipo) {\r\n        // Mostrar la alerta con SweetAlert2\r\n        Swal.fire({\r\n            icon: tipo,  // Tipo de alerta (success, error, warning, info, etc.)\r\n            title: titulo,\r\n            text: mensaje,  // Mensaje de la alerta\r\n        }).then(() => {\r\n            // Cerrar el modal de edición del cliente al cerrar la alerta\r\n            const modales = document.querySelectorAll('.modal-editarCliente');\r\n            modales.forEach(modal => {\r\n                if ($(modal).hasClass('show')) {\r\n                    $(modal).modal('hide');\r\n                }\r\n            });\r\n        });\r\n    }\r\n    \r\n})();\r\n","(function (){\r\n\r\n    let dataTable;\r\n    let dataTableInit = false;\r\n\r\n    //Configuracion DataTable\r\n    const dataTableOption = {\r\n        destroy: true,\r\n        language: {\r\n            url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-MX.json',\r\n        },\r\n        //dom: 'Bfrtip', // Agrega la sección para los botones\r\n        dom: '<\"row mb-2\"<\"d-flex justify-content-start col-sm-6\"f><\"d-flex justify-content-end col-sm-6\"B>>' +  // B-> botones, F -> búsqueda\r\n        '<\"row\"<\"col-sm-12\"tr>>' +             // T -> tabla\r\n         '<\"row d-flex justify-content-between\"<\"col d-flex justify-content-start\"l><\"col d-flex justify-content-center\"i><\"col d-flex justify-content-end\"p>>' ,  // L-> de entradas  - I -> número de resultados por página, P-> paginador\r\n        buttons: [\r\n            {\r\n                extend: 'excelHtml5',\r\n                text: '<i class=\"fa-solid fa-file-excel\"></i>',\r\n                titleAttr: 'Exportar a Excel',\r\n                exportOptions: {\r\n                    columns: ':not(.no-export)' // Asegúrate de que la clase 'no-export' esté en la columna que quieres ocultar\r\n                },\r\n                className: 'btn btn-success'\r\n            },\r\n            {\r\n                extend: 'pdfHtml5',\r\n                text: '<i class=\"fa-solid fa-file-pdf\"></i>',\r\n                titleAttr: 'Exportar a PDF',\r\n                exportOptions: {\r\n                    columns: ':not(.no-export)' // Asegúrate de que la clase 'no-export' esté en la columna que quieres ocultar\r\n                },\r\n                className: 'btn btn-danger'\r\n            },\r\n            {\r\n                extend: 'csvHtml5',\r\n                text: '<i class=\"fa-solid fa-file-csv\"></i>',\r\n                titleAttr: 'Exportar a CSV',\r\n                exportOptions: {\r\n                    columns: ':not(.no-export)' // Asegúrate de que la clase 'no-export' esté en la columna que quieres ocultar\r\n                },\r\n                className: 'btn btn-primary'\r\n            },\r\n            {\r\n                extend: 'print',\r\n                text: '<i class=\"fa-solid fa-print\"></i>',\r\n                titleAttr: 'Imprimir',\r\n                exportOptions: {\r\n                    columns: ':not(.no-export)' // Asegúrate de que la clase 'no-export' esté en la columna que quieres ocultar\r\n                },\r\n                className: 'btn btn-info'\r\n            }\r\n\r\n        ],\r\n        columnDefs: [\r\n            { orderable: false, targets: [3, 8] },  // Desactiva la ordenación en la columna 8 (índice 7)\r\n            { visible: false, targets: [5,6,13,14] }\r\n        ]\r\n    };\r\n\r\n    //Ejecutar Funciones\r\n    initDatable();\r\n\r\n    //Inicializamos DataTable\r\n    async function initDatable(){\r\n        if(dataTableInit){\r\n            dataTable.destroy(); //Destruye la tabla si ya existe previamente\r\n        }\r\n\r\n        await listarUsers();\r\n\r\n        //Inicializa DataTable\r\n        dataTable = $('#datatable_users').DataTable(dataTableOption);\r\n\r\n        dataTableInit = true;\r\n    }\r\n\r\n    // Funcion para listar a los usuarios\r\n    async function listarUsers(){\r\n\r\n        const rolesDictionary = {\r\n            1: 'Administrador',\r\n            2: 'General',\r\n            3: 'Limpieza'\r\n        };\r\n\r\n        const estatusDictionary = {\r\n            0: 'Inactivo',\r\n            1: 'Activo'\r\n        };\r\n\r\n        try{\r\n\r\n            const url = 'http://localhost:3000/api/usuarios/listar';\r\n            const resultado = await fetch(url);\r\n            const usuarios = await resultado.json();\r\n            \r\n            //Selecciono el cuerpo de la tabla\r\n            const tableBody = document.getElementById('tableBody_users');\r\n\r\n            tableBody.innerHTML = '';\r\n\r\n            //Recorreo el arreglo de usuarios y genera las filas de la tabla\r\n            usuarios.forEach((usuario, index) => {\r\n                \r\n                const row = document.createElement('tr');\r\n\r\n                row.innerHTML = `\r\n                    <td>${index + 1}</td>\r\n                    <td>${usuario.nombre}</td>\r\n                    <td>${usuario.apellido}</td>\r\n                    <td>${usuario.direccion}</td>   \r\n                    <td>${usuario.email}</td>\r\n                    <td>${usuario.password}</td>\r\n                    <td>${usuario.password2}</td>\r\n                    <td>${usuario.fecha_nacimiento}</td>\r\n                    <td>${rolesDictionary[usuario.rol_id]}</td>\r\n                    <td>${estatusDictionary[usuario.estatus]}</td>\r\n                    <td>${usuario.fecha_creacion}</td>\r\n                    <td>${usuario.ultimo_acceso}</td>\r\n                    <td class=\"text-center\">\r\n                        ${usuario.confirmado == 1 \r\n                            ? '<i class=\"fa-solid fa-check-circle text-success\" title=\"Confirmado\"></i>' \r\n                            : '<i class=\"fa-solid fa-times-circle text-danger\" title=\"No Confirmado\"></i>'}\r\n                    </td>\r\n                    <td>${usuario.password_actual}</td>\r\n                    <td>${usuario.password_nuevo}</td>\r\n                    <td>\r\n                        <!-- Botón de editar que abre el modal -->\r\n                        <button class=\"btn btn-sm btn-primary\" data-toggle=\"modal\" data-target=\"#editarUsuarioModal${usuario.id}\">\r\n                            <i class=\"fa-solid fa-pen\"></i>\r\n                        </button>\r\n\r\n                        <!-- Modal Editar Cliente -->\r\n                        <div class=\"modal fade modal-editarUsuario\" id=\"editarUsuarioModal${usuario.id}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"UsuarioModalLabel\" aria-hidden=\"true\">\r\n                            <div class=\"modal-dialog\" role=\"document\">\r\n                                <div class=\"modal-content\">\r\n                                    <div class=\"modal-header\">\r\n                                        <h5 class=\"modal-title\" id=\"usuariosModalLabel\">Editar Usuario</h5>\r\n                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <form method=\"POST\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"nombre\">Nombre</label>\r\n                                                <input type=\"text\" class=\"form-control\" id=\"nombre${usuario.id}\" name=\"nombre\" value=\"${usuario.nombre}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"apellidos\">Apellidos</label>\r\n                                                <input type=\"text\" class=\"form-control\" id=\"apellido${usuario.id}\" name=\"apellidos\" value=\"${usuario.apellido}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"direccion\">Direccion</label>\r\n                                                <input type=\"text\" class=\"form-control\" id=\"direccion${usuario.id}\" name=\"direccion\" value=\"${usuario.direccion}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"correo\">Correo</label>\r\n                                                <input type=\"email\" class=\"form-control\" id=\"correo${usuario.id}\" name=\"correo\" value=\"${usuario.email}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"fecha_nacimiento\">Fecha de Nacimiento</label>\r\n                                                <input type=\"date\" class=\"form-control\" id=\"fecha_nacimiento${usuario.id}\" name=\"fecha_nacimiento\" value=\"${usuario.fecha_nacimiento}\" />\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"rol_id\">Rol</label>\r\n                                                <select class=\"form-control\" id=\"rol_id${usuario.id}\" name=\"rol_id\">\r\n                                                    <option value=\"1\" ${usuario.rol_id == 1 ? 'selected' : ''}>Administrador</option>\r\n                                                    <option value=\"2\" ${usuario.rol_id == 2 ? 'selected' : ''}>General</option>\r\n                                                    <option value=\"3\" ${usuario.rol_id == 3 ? 'selected' : ''}>Limpieza</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"estatus\">Estatus</label>\r\n                                                <select class=\"form-control\" id=\"estatus${usuario.id}\" name=\"estatus\">\r\n                                                    <option value=\"1\" ${usuario.estatus == 1 ? 'selected' : ''}>Activo</option>\r\n                                                    <option value=\"0\" ${usuario.estatus == 0 ? 'selected' : ''}>Inactivo</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"confirmado\">Confirmado</label>\r\n                                                <select class=\"form-control\" id=\"confirmado${usuario.id}\" name=\"confirmado\">\r\n                                                    <option value=\"1\" ${usuario.confirmado == 1 ? 'selected' : ''}>Confirmado</option>\r\n                                                    <option value=\"0\" ${usuario.confirmado == 0 ? 'selected' : ''}>No Confirmado</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div class=\"modal-footer\">\r\n                                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                                                <button type=\"button\" class=\"btn btn-primary btn-actualizarUsuario\" data-id=\"${usuario.id}\">Guardar</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                        <!-- Botón de eliminar -->\r\n                        <button class=\"btn btn-sm btn-danger btn-eliminarCliente\" data-id=\"${usuario.id}\">\r\n                            <i class=\"fa-solid fa-trash\"></i>\r\n                        </button>\r\n                    </td>\r\n                `;\r\n\r\n                tableBody.appendChild(row);                \r\n            });\r\n\r\n            // Delegación para actualizar usuario\r\n            tableBody.addEventListener('click', function(e) {\r\n                if (e.target.classList.contains('btn-actualizarUsuario')) {\r\n                    const UsuarioId = e.target.getAttribute('data-id');\r\n                    actualizarUsuario(UsuarioId);\r\n                }\r\n                // Delegación para eliminar cliente\r\n                if (e.target.classList.contains('btn-eliminarUsuario')) {\r\n                    const UsuarioId = e.target.getAttribute('data-id');\r\n                    confirmarEliminacionUsuario(UsuarioId);\r\n                }\r\n                });\r\n\r\n                // Subir actualización del cliente\r\n                async function actualizarUsuario(id) {\r\n                    const usuario = {\r\n                        id,\r\n                        nombre: document.querySelector(`#nombre${id}`).value.trim(),\r\n                        apellido: document.querySelector(`#apellido${id}`).value.trim(),\r\n                        direccion: document.querySelector(`#direccion${id}`).value.trim(),\r\n                        email: document.querySelector(`#correo${id}`).value.trim(),\r\n                        fecha_nacimiento: document.querySelector(`#fecha_nacimiento${id}`).value,\r\n                        rol_id: document.querySelector(`#rol_id${id}`).value, // Value from select\r\n                        estatus: document.querySelector(`#estatus${id}`).value, // Value from select\r\n                        confirmado: document.querySelector(`#confirmado${id}`).value // Value from select\r\n                    };\r\n                    console.log(usuario);\r\n                    //await subirActualizacionUsuario(usuario);  // Envía los datos para actualización\r\n                }\r\n\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n})();"]}